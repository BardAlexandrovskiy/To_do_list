{"version":3,"sources":["dom.js","index.js"],"names":["Dom","toDoInput","document","querySelector","toDoList","localStorage","getItem","toDoArr","getLocalStorage","list","length","forEach","element","liId","id","value","check","toDoItem","addNewElement","className","setAttribute","checkBoxBtn","checkImg","src","checkPic","textDiv","deleteButton","deleteImg","deletePic","innerText","onclick","classList","contains","remove","localStorageCheck","elementLocal","setLocalStorage","add","style","borderRadius","translateX","Promise","resolve","interval","setInterval","transform","opacity","clearInterval","then","deleteLocalStorageEl","deletedLocalStorageEl","filter","setItem","JSON","stringify","parse","changedData","parent","appendChild","createElement","Date","now","localStorageAddEl","push","console","log","blur","dom","localStorageCreate","addEventListener","key","keyCode","trim","createToDoItem"],"mappings":"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","file":"src.11529269.js","sourceRoot":"..\\src","sourcesContent":["/* eslint-disable class-methods-use-this */\r\nimport checkPic from './img/check.png';\r\nimport deletePic from './img/delete.png';\r\n\r\nexport default class Dom {\r\n  constructor() {\r\n    this.toDoInput = document.querySelector('#to_do_input');\r\n    this.toDoList = document.querySelector('#to_do_list');\r\n  }\r\n\r\n  localStorageCreate() {\r\n    if (!localStorage.getItem('Todo')) {\r\n      localStorage.setItem('Todo', JSON.stringify({ 'list': [] }));\r\n    } else {\r\n      const toDoArr = this.getLocalStorage().list;\r\n      if (toDoArr.length) {\r\n        toDoArr.forEach(element => {\r\n          const liId = element.id;\r\n\r\n          this[liId] = {\r\n            'value': element.value,\r\n            'check': element.check,\r\n            'id': liId\r\n          }\r\n\r\n          const toDoItem = this.addNewElement(this.toDoList, 'li');\r\n          toDoItem.className = 'to_do_item';\r\n          toDoItem.setAttribute('li_id', `${liId}`);\r\n          const checkBoxBtn = this.addNewElement(toDoItem, 'button');\r\n          const checkImg = this.addNewElement(checkBoxBtn, 'img');\r\n          checkImg.src = checkPic;\r\n          const textDiv = this.addNewElement(toDoItem, 'div');\r\n          const deleteButton = this.addNewElement(toDoItem, 'button');\r\n          deleteButton.className = 'button_delete';\r\n          const deleteImg = this.addNewElement(deleteButton, 'img');\r\n          deleteImg.className = 'img_delete';\r\n          deleteImg.src = deletePic;\r\n          if (element.check) {\r\n            checkBoxBtn.className = 'check_box check_box_checked';\r\n            checkImg.className = 'img_check img_checked';\r\n            textDiv.className = 'to_do_text to_do_text_checked';\r\n          } else {\r\n            checkBoxBtn.className = 'check_box';\r\n            checkImg.className = 'img_check';\r\n            textDiv.className = 'to_do_text';\r\n          }\r\n\r\n          textDiv.innerText = element.value;\r\n\r\n          checkBoxBtn.onclick = () => {\r\n            if (!checkBoxBtn.classList.contains('check_box_checked')) {\r\n              checkBoxBtn.classList.add('check_box_checked')\r\n              checkImg.classList.add('img_checked');\r\n              textDiv.classList.add('to_do_text_checked');\r\n              this[liId].check = true;\r\n              const localStorageCheck = this.getLocalStorage();\r\n              localStorageCheck.list.forEach(elementLocal => {\r\n                if (elementLocal.id === liId) {\r\n                  // eslint-disable-next-line no-param-reassign\r\n                  element.check = true;\r\n                }\r\n                this.setLocalStorage(localStorageCheck);\r\n              });\r\n            } else {\r\n              checkBoxBtn.classList.remove('check_box_checked')\r\n              checkImg.classList.remove('img_checked');\r\n              textDiv.classList.remove('to_do_text_checked');\r\n              this[liId].check = false;\r\n              const localStorageCheck = this.getLocalStorage();\r\n              localStorageCheck.list.forEach(elementLocal => {\r\n                if (elementLocal.id === liId) {\r\n                  // eslint-disable-next-line no-param-reassign\r\n                  element.check = false;\r\n                }\r\n                this.setLocalStorage(localStorageCheck);\r\n              });\r\n            }\r\n          };\r\n\r\n          deleteButton.onclick = () => {\r\n            toDoItem.style.borderRadius = '0 5px 5px 0';\r\n            let translateX = 0;\r\n            new Promise(resolve => {\r\n              const interval = setInterval(() => {\r\n                if (translateX < 100) {\r\n                  translateX += 5;\r\n                  toDoItem.style.transform = `translateX(-${translateX}%)`;\r\n                } else {\r\n                  toDoItem.style.opacity = 0;\r\n                  clearInterval(interval);\r\n                  resolve('animation done');\r\n                }\r\n              }, 20)\r\n            })\r\n              .then(() => {\r\n                const deleteLocalStorageEl = this.getLocalStorage();\r\n                const deletedLocalStorageEl = {\r\n                  'list': deleteLocalStorageEl.list.filter(elementLocal => {\r\n                    return elementLocal.id !== liId;\r\n                  })\r\n                }\r\n                this.setLocalStorage(deletedLocalStorageEl);\r\n                toDoItem.remove();\r\n                delete this[liId];\r\n              });\r\n          };\r\n          toDoItem.classList.add('to_do_item_add_animation');\r\n        })\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  getLocalStorage() {\r\n    return JSON.parse(localStorage.getItem('Todo'));\r\n  }\r\n\r\n  setLocalStorage(changedData) {\r\n    return localStorage.setItem('Todo', JSON.stringify(changedData));\r\n  }\r\n\r\n  addNewElement(parent, element) {\r\n    return parent.appendChild(document.createElement(element));\r\n  }\r\n\r\n  createToDoItem() {\r\n    // Добавляем элемент в localStorage\r\n    const id = Date.now()\r\n    const localStorageAddEl = this.getLocalStorage();\r\n    localStorageAddEl.list.push({\r\n      'value': this.toDoInput.value,\r\n      'check': false,\r\n      'id': id\r\n    })\r\n    this.setLocalStorage(localStorageAddEl);\r\n\r\n    // Добавляем элемент в class Dom\r\n    this[id] = {\r\n      'value': this.toDoInput.value,\r\n      'check': false,\r\n      'id': id\r\n    }\r\n    console.log(this[id]);\r\n\r\n    // Добавляем элемент в html\r\n    const toDoItem = this.addNewElement(this.toDoList, 'li');\r\n    toDoItem.className = 'to_do_item';\r\n    toDoItem.setAttribute('li_id', `${id}`)\r\n    const checkBoxBtn = this.addNewElement(toDoItem, 'button');\r\n    checkBoxBtn.className = 'check_box';\r\n    const checkImg = this.addNewElement(checkBoxBtn, 'img');\r\n    checkImg.className = 'img_check';\r\n    checkImg.src = checkPic;\r\n    const textDiv = this.addNewElement(toDoItem, 'div');\r\n    textDiv.className = 'to_do_text';\r\n    const deleteButton = this.addNewElement(toDoItem, 'button');\r\n    deleteButton.className = 'button_delete';\r\n    const deleteImg = this.addNewElement(deleteButton, 'img');\r\n    deleteImg.className = 'img_delete';\r\n    deleteImg.src = deletePic;\r\n\r\n    textDiv.innerText = this.toDoInput.value;\r\n    this.toDoInput.value = '';\r\n    this.toDoInput.blur();\r\n\r\n    checkBoxBtn.onclick = () => {\r\n      if (!checkBoxBtn.classList.contains('check_box_checked')) {\r\n        checkBoxBtn.classList.add('check_box_checked')\r\n        checkImg.classList.add('img_checked');\r\n        textDiv.classList.add('to_do_text_checked');\r\n        this[id].check = true;\r\n        const localStorageCheck = this.getLocalStorage();\r\n        localStorageCheck.list.forEach(element => {\r\n          if (element.id === id) {\r\n            // eslint-disable-next-line no-param-reassign\r\n            element.check = true;\r\n          }\r\n          this.setLocalStorage(localStorageCheck);\r\n        });\r\n      } else {\r\n        checkBoxBtn.classList.remove('check_box_checked')\r\n        checkImg.classList.remove('img_checked');\r\n        textDiv.classList.remove('to_do_text_checked');\r\n        this[id].check = false;\r\n        const localStorageCheck = this.getLocalStorage();\r\n        localStorageCheck.list.forEach(element => {\r\n          if (element.id === id) {\r\n            // eslint-disable-next-line no-param-reassign\r\n            element.check = false;\r\n          }\r\n          this.setLocalStorage(localStorageCheck);\r\n        });\r\n      }\r\n    };\r\n\r\n    deleteButton.onclick = () => {\r\n      toDoItem.style.borderRadius = '0 5px 5px 0';\r\n      let translateX = 0;\r\n      new Promise(resolve => {\r\n        const interval = setInterval(() => {\r\n          if (translateX < 100) {\r\n            translateX += 5;\r\n            toDoItem.style.transform = `translateX(-${translateX}%)`;\r\n          } else {\r\n            toDoItem.style.opacity = 0;\r\n            clearInterval(interval);\r\n            resolve('animation done');\r\n          }\r\n        }, 20)\r\n      })\r\n        .then(() => {\r\n          const deleteLocalStorageEl = this.getLocalStorage();\r\n          const deletedLocalStorageEl = {\r\n            'list': deleteLocalStorageEl.list.filter(element => {\r\n              return element.id !== id;\r\n            })\r\n          }\r\n          this.setLocalStorage(deletedLocalStorageEl);\r\n          toDoItem.remove();\r\n          delete this[id];\r\n        });\r\n    };\r\n\r\n    toDoItem.classList.add('to_do_item_add_animation');\r\n  }\r\n}\r\n","import Dom from './dom';\n\nconst dom = new Dom();\n\ndom.localStorageCreate();\n\ndom.toDoInput.addEventListener('keydown', key => {\n  if (key.keyCode === 13 && dom.toDoInput.value.trim() !== '') {\n    dom.createToDoItem();\n  }\n});\n"]}